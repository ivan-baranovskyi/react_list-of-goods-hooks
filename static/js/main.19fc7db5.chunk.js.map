{"version":3,"sources":["App.tsx","index.tsx"],"names":["Filter","goodsFromServer","App","useState","sortFilter","setSortFilter","isReverse","setIsReverse","sortGoods","goods","copyOfGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","sortList","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAuBKA,E,0EAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,gBAAAA,E,qBAAAA,M,KA4BE,IAAME,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA3BR,SAAkBC,EAAlB,GAA4E,IAAvCL,EAAsC,EAAtCA,WAAYE,EAA0B,EAA1BA,UACzCI,EAAW,YAAOD,GAmBxB,OAjBIL,GACFM,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQT,GACN,KAAKJ,EAAOc,SACV,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAAOgB,OACV,OAAOJ,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAKXV,GACFI,EAAYO,UAGPP,EAOWQ,CAASjB,EAAiB,CAAEG,aAAYE,cAE1D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAeJ,EAAOc,WAEpCQ,QAAS,WACPjB,EAAcL,EAAOc,WANzB,iCAYA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAeJ,EAAOgB,SAEpCM,QAAS,WACPjB,EAAcL,EAAOgB,SANzB,4BAYA,wBACEI,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,YAAaf,IAEfgB,QAAS,WACPf,GAAcD,IANlB,sBAYEF,GAAcE,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAc,IACdE,GAAa,IALjB,sBAeJ,6BACE,6BACGC,EAAUe,KAAI,SAAAC,GAAI,OACjB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cClHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19fc7db5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface SortingList {\n  sortFilter: string,\n  isReverse: boolean,\n}\n\nenum Filter {\n  length = 'length',\n  alphabet = 'alphabet',\n}\n\nfunction sortList(goods: string[], { sortFilter, isReverse }: SortingList) {\n  const copyOfGoods = [...goods];\n\n  if (sortFilter) {\n    copyOfGoods.sort((good1, good2) => {\n      switch (sortFilter) {\n        case Filter.alphabet:\n          return good1.localeCompare(good2);\n        case Filter.length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortFilter, setSortFilter] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const sortGoods = sortList(goodsFromServer, { sortFilter, isReverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortFilter !== Filter.alphabet,\n          })}\n          onClick={() => {\n            setSortFilter(Filter.alphabet);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortFilter !== Filter.length,\n          })}\n          onClick={() => {\n            setSortFilter(Filter.length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': !isReverse,\n          })}\n          onClick={() => {\n            setIsReverse(!isReverse);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortFilter || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortFilter('');\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {sortGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}